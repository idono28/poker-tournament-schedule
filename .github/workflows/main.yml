name: Deploy static content to Pages (pnpm)

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ① まず Node だけ入れる（ここでは cache 指定しない！）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # ② Corepack 有効化（pnpm を使えるようにする下準備）
      - name: Enable Corepack
        run: corepack enable

      # ③ pnpm を導入（version は省略して package.json の packageManager に合わせるのが安定）
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      # ④ pnpm store をキャッシュ（ここで初めて pnpm を触る）
      - name: Get pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # ⑤ 依存関係インストール & ビルド
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      # ⑥ Pages へデプロイ
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
